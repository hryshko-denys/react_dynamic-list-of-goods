{"version":3,"sources":["api/api.ts","components/GoodList/GoodList.tsx","components/Buttons/ButtonData.ts","components/Buttons/Buttons.tsx","App.tsx","index.tsx"],"names":["getGoods","a","fetch","then","respond","json","response","data","GoodsList","goodsList","map","good","key","id","style","color","name","defaultProps","ButtonsData","title","Buttons","onFilter","button","onClick","type","App","state","isLoaded","handleFilter","setState","filter","sort","slice","length","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAAaA,G,MAAQ,uCAAG,4BAAAC,EAAA,sEACCC,MAAM,2CAA2CC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UAD1E,cAChBC,EADgB,yBAGfA,EAASC,MAHM,2CAAH,sDCORC,EAAuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAClC,4BACGA,EAAUC,KAAI,SAAAC,GAAI,OACjB,wBAAIC,IAAKD,EAAKE,GAAIC,MAAO,CAAEC,MAAOJ,EAAKI,QACpCJ,EAAKK,WAMdR,EAAUS,aAAe,CACvBR,UAAW,ICdN,IAAMS,EAAwB,CACnC,CACEC,MAAO,kBAET,CACEA,MAAO,sBAET,CACEA,MAAO,mBCLEC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvC,oCACGH,EAAYR,KAAI,SAAAY,GAAM,OACrB,4BACEC,QAAS,kBAAMF,EAASC,EAAOH,QAC/BP,IAAKU,EAAOH,MACZK,KAAK,UAEJF,EAAOH,YCiEDM,E,4MAnEbC,MAAe,CACbC,UAAU,EACVlB,UAAW,I,EAcbmB,a,uCAAe,WAAOT,GAAP,eAAAlB,EAAA,6DACb,EAAK4B,SAAS,CACZF,UAAU,IAFC,SAKM3B,IALN,OAKPO,EALO,OAOb,EAAKsB,SAAS,CACZF,UAAU,IARC,KAWLR,EAXK,OAYN,mBAZM,OAkBN,uBAlBM,+BAaT,EAAKU,SAAS,CACZF,UAAU,EACVlB,UAAWF,EAAKuB,QAAO,SAAAnB,GAAI,MAAmB,QAAfA,EAAKI,WAf7B,oCAmBT,EAAKc,SAAS,CACZF,UAAU,EACVlB,UAAWF,EAAKwB,OAAOC,MAAM,EAAG,KArBzB,6BAwBF,EAAKH,SAAS,CACrBF,UAAU,EACVlB,UAAWF,IA1BF,4C,wPAVMP,I,OAEC,KAFdO,E,QAEG0B,QACPC,KAAKL,SAAS,CACZF,UAAU,EACVlB,UAAWF,I,qIAoCP,IAAD,EACyB2B,KAAKR,MAA7BC,EADD,EACCA,SAAUlB,EADX,EACWA,UAElB,OACE,oCACE,qDACCkB,EAEG,oCACE,kBAAC,EAAD,CAAWlB,UAAWA,IACtB,kBAAC,EAAD,CAASY,SAAUa,KAAKN,gBAG1B,iD,GA7DMO,IAAMC,WCRxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.10a478df.chunk.js","sourcesContent":["export const getGoods = async <T>(): Promise<T[]> => {\n  const response = await fetch('https://mate.academy/students-api/goods').then(respond => respond.json());\n\n  return response.data;\n};\n","import React, { FC } from 'react';\nimport { Good } from '../../interfaces';\n\ninterface Props {\n  goodsList: Good[];\n}\n\nexport const GoodsList: FC<Props> = ({ goodsList }) => (\n  <ul>\n    {goodsList.map(good => (\n      <li key={good.id} style={{ color: good.color }}>\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n\nGoodsList.defaultProps = {\n  goodsList: [],\n};\n","export interface Button {\n  title: string;\n}\n\nexport const ButtonsData: Button[] = [\n  {\n    title: 'Load All goods',\n  },\n  {\n    title: 'Load 5 first goods',\n  },\n  {\n    title: 'Load red goods',\n  },\n];\n","import React, { FC } from 'react';\nimport { ButtonsData } from './ButtonData';\n\ninterface ButtonsProps {\n  onFilter: (title: string) => void;\n}\n\nexport const Buttons: FC<ButtonsProps> = ({ onFilter }) => (\n  <>\n    {ButtonsData.map(button => (\n      <button\n        onClick={() => onFilter(button.title)}\n        key={button.title}\n        type=\"button\"\n      >\n        {button.title}\n      </button>\n    ))}\n  </>\n);\n","import React from 'react';\nimport './App.css';\nimport { getGoods } from './api/api';\nimport { GoodsList } from './components/GoodList/GoodList';\nimport { Good } from './interfaces';\nimport { Buttons } from './components/Buttons/Buttons';\n\ninterface State {\n  isLoaded: boolean;\n  goodsList: Good[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isLoaded: false,\n    goodsList: [],\n  };\n\n  async componentDidMount() {\n    const data = await getGoods<Good>();\n\n    if (data.length !== 0) {\n      this.setState({\n        isLoaded: true,\n        goodsList: data,\n      });\n    }\n  }\n\n  handleFilter = async (title: string) => {\n    this.setState({\n      isLoaded: false,\n    });\n\n    const data = await getGoods<Good>();\n\n    this.setState({\n      isLoaded: true,\n    });\n\n    switch (title) {\n      case 'Load red goods':\n        this.setState({\n          isLoaded: true,\n          goodsList: data.filter(good => good.color === 'red'),\n        });\n        break;\n      case 'Load 5 first goods':\n        this.setState({\n          isLoaded: true,\n          goodsList: data.sort().slice(0, 5),\n        });\n        break;\n      default: this.setState({\n        isLoaded: true,\n        goodsList: data,\n      });\n    }\n  };\n\n  render() {\n    const { isLoaded, goodsList } = this.state;\n\n    return (\n      <>\n        <h1>Dynamic list of Goods</h1>\n        {isLoaded\n          ? (\n            <>\n              <GoodsList goodsList={goodsList} />\n              <Buttons onFilter={this.handleFilter} />\n            </>\n          )\n          : <h2> Loading... </h2>}\n\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}